name: build

on:
  push:
    branches: [master]
    paths-ignore:
      - README.md
      - LICENSE

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm test -- --coverage
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/coverage-final.json
  upload-coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run git-info
      - run: npm run build
      - uses: actions/upload-artifact@v2
        with:
          name: app
          path: build
  deploy:
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: app
      - run: |
          CFID=$(aws cloudfront list-distributions --query "DistributionList.Items[].{Id:Id,Origin:Origins.Items[0].DomainName}[?contains(Origin,'${{ secrets.S3_BUCKET_NAME }}')].Id" --output text)
          aws s3 sync . "s3://${{ secrets.S3_BUCKET_NAME }}" --delete
          aws cloudfront create-invalidation --distribution-id ${CFID} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
